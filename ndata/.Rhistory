ecoli_20an_cn_5_5tra, ecoli_20an_cn_5_5tst,
file = "ecoli_20an_cn.RData")
rm(ecoli_20an_cn_5_1tra)
load("ecoli_20an_cn_5_1tst.RData")
load(file = "data/ecoli_20an_cn_5_1tst.RData")
load(file = "data/ecoli_20an_cn.RData")
save(ecoli_20an_cn_5_1tra, ecoli_20an_cn_5_1tst,
ecoli_20an_cn_5_2tra, ecoli_20an_cn_5_2tst,
ecoli_20an_cn_5_3tra, ecoli_20an_cn_5_3tst,
ecoli_20an_cn_5_4tra, ecoli_20an_cn_5_4tst,
ecoli_20an_cn_5_5tra, ecoli_20an_cn_5_5tst,
file = "data/ecoli_20an_cn.RData")
ecoli_20an_cn_5_1tra <- ecoli_20an_cn_5_1tra[, c("class", setdiff(colnames(ecoli_20an_cn_5_1tra), "class"))]
ecoli_20an_cn_5_1tra <- read.keel("files/keel/noisy/an/cn/cn20/ecoli-20an-cn/ecoli-20an-cn-5-1tra.dat")
ecoli_20an_cn_5_1tst <- read.keel("files/keel/noisy/an/cn/cn20/ecoli-20an-cn/ecoli-20an-cn-5-1tst.dat")
ecoli_20an_cn_5_1tst$Site <- factor(as.character(ecoli_20an_cn_5_1tst$Site), levels = c("cp","im","imL","imS","imU","om","omL","pp"))
ecoli_20an_cn_5_2tra <- read.keel("files/keel/noisy/an/cn/cn20/ecoli-20an-cn/ecoli-20an-cn-5-2tra.dat")
ecoli_20an_cn_5_2tst <- read.keel("files/keel/noisy/an/cn/cn20/ecoli-20an-cn/ecoli-20an-cn-5-2tst.dat")
ecoli_20an_cn_5_2tst$Site <- factor(as.character(ecoli_20an_cn_5_2tst$Site), levels = c("cp","im","imL","imS","imU","om","omL","pp"))
ecoli_20an_cn_5_3tra <- read.keel("files/keel/noisy/an/cn/cn20/ecoli-20an-cn/ecoli-20an-cn-5-3tra.dat")
ecoli_20an_cn_5_3tst <- read.keel("files/keel/noisy/an/cn/cn20/ecoli-20an-cn/ecoli-20an-cn-5-3tst.dat")
ecoli_20an_cn_5_3tst$Site <- factor(as.character(ecoli_20an_cn_5_3tst$Site), levels = c("cp","im","imL","imS","imU","om","omL","pp"))
ecoli_20an_cn_5_4tra <- read.keel("files/keel/noisy/an/cn/cn20/ecoli-20an-cn/ecoli-20an-cn-5-4tra.dat")
ecoli_20an_cn_5_4tst <- read.keel("files/keel/noisy/an/cn/cn20/ecoli-20an-cn/ecoli-20an-cn-5-4tst.dat")
ecoli_20an_cn_5_4tst$Site <- factor(as.character(ecoli_20an_cn_5_4tst$Site), levels = c("cp","im","imL","imS","imU","om","omL","pp"))
ecoli_20an_cn_5_5tra <- read.keel("files/keel/noisy/an/cn/cn20/ecoli-20an-cn/ecoli-20an-cn-5-5tra.dat")
ecoli_20an_cn_5_5tst <- read.keel("files/keel/noisy/an/cn/cn20/ecoli-20an-cn/ecoli-20an-cn-5-5tst.dat")
ecoli_20an_cn_5_5tst$Site <- factor(as.character(ecoli_20an_cn_5_5tst$Site), levels = c("cp","im","imL","imS","imU","om","omL","pp"))
change <- colnames(ecoli_20an_cn_5_1tra)[colnames(ecoli_20an_cn_5_1tra) != "Site"]
ecoli_20an_cn_5_1tra <- ecoli_20an_cn_5_1tra %>% mutate_at(change, function(x) {as.numeric(as.character(x))}) %>%
rename(class = Site)
ecoli_20an_cn_5_1tst <- ecoli_20an_cn_5_1tst %>% mutate_at(change, function(x) {as.numeric(as.character(x))}) %>%
rename(class = Site)
ecoli_20an_cn_5_2tra <- ecoli_20an_cn_5_2tra %>% mutate_at(change, function(x) {as.numeric(as.character(x))}) %>%
rename(class = Site)
ecoli_20an_cn_5_2tst <- ecoli_20an_cn_5_2tst %>% mutate_at(change, function(x) {as.numeric(as.character(x))}) %>%
rename(class = Site)
ecoli_20an_cn_5_3tra <- ecoli_20an_cn_5_3tra %>% mutate_at(change, function(x) {as.numeric(as.character(x))}) %>%
rename(class = Site)
ecoli_20an_cn_5_3tst <- ecoli_20an_cn_5_3tst %>% mutate_at(change, function(x) {as.numeric(as.character(x))}) %>%
rename(class = Site)
ecoli_20an_cn_5_4tra <- ecoli_20an_cn_5_4tra %>% mutate_at(change, function(x) {as.numeric(as.character(x))}) %>%
rename(class = Site)
ecoli_20an_cn_5_4tst <- ecoli_20an_cn_5_4tst %>% mutate_at(change, function(x) {as.numeric(as.character(x))}) %>%
rename(class = Site)
ecoli_20an_cn_5_5tra <- ecoli_20an_cn_5_5tra %>% mutate_at(change, function(x) {as.numeric(as.character(x))}) %>%
rename(class = Site)
ecoli_20an_cn_5_5tst <- ecoli_20an_cn_5_5tst %>% mutate_at(change, function(x) {as.numeric(as.character(x))}) %>%
rename(class = Site)
ecoli_20an_cn_5_1tra <- ecoli_20an_cn_5_1tra[, c("class", setdiff(colnames(ecoli_20an_cn_5_1tra), "class"))]
ecoli_20an_cn_5_1tst <- ecoli_20an_cn_5_1tst[, c("class", setdiff(colnames(ecoli_20an_cn_5_1tst), "class"))]
ecoli_20an_cn_5_2tra <- ecoli_20an_cn_5_2tra[, c("class", setdiff(colnames(ecoli_20an_cn_5_2tra), "class"))]
ecoli_20an_cn_5_2tst <- ecoli_20an_cn_5_2tst[, c("class", setdiff(colnames(ecoli_20an_cn_5_2tst), "class"))]
ecoli_20an_cn_5_3tra <- ecoli_20an_cn_5_3tra[, c("class", setdiff(colnames(ecoli_20an_cn_5_3tra), "class"))]
ecoli_20an_cn_5_3tst <- ecoli_20an_cn_5_3tst[, c("class", setdiff(colnames(ecoli_20an_cn_5_3tst), "class"))]
ecoli_20an_cn_5_4tra <- ecoli_20an_cn_5_4tra[, c("class", setdiff(colnames(ecoli_20an_cn_5_4tra), "class"))]
ecoli_20an_cn_5_4tst <- ecoli_20an_cn_5_4tst[, c("class", setdiff(colnames(ecoli_20an_cn_5_4tst), "class"))]
ecoli_20an_cn_5_5tra <- ecoli_20an_cn_5_5tra[, c("class", setdiff(colnames(ecoli_20an_cn_5_5tra), "class"))]
ecoli_20an_cn_5_5tst <- ecoli_20an_cn_5_5tst[, c("class", setdiff(colnames(ecoli_20an_cn_5_5tst), "class"))]
save(ecoli_20an_cn_5_1tra, ecoli_20an_cn_5_1tst,
ecoli_20an_cn_5_2tra, ecoli_20an_cn_5_2tst,
ecoli_20an_cn_5_3tra, ecoli_20an_cn_5_3tst,
ecoli_20an_cn_5_4tra, ecoli_20an_cn_5_4tst,
ecoli_20an_cn_5_5tra, ecoli_20an_cn_5_5tst,
file = "data/ecoli_20an_cn.RData")
rm(ecoli_20an_cn_5_1tra)
load(file = "data/ecoli_20an_cn.RData")
ionosphere_20an_cn_5_1tra <- read.keel("files/keel/noisy/an/cn/cn20/ionosphere-20an-cn/ionosphere-20an-cn-5-1tra.dat")
ionosphere_20an_cn_5_1tst <- read.keel("files/keel/noisy/an/cn/cn20/ionosphere-20an-cn/ionosphere-20an-cn-5-1tst.dat")
ionosphere_20an_cn_5_2tra <- read.keel("files/keel/noisy/an/cn/cn20/ionosphere-20an-cn/ionosphere-20an-cn-5-2tra.dat")
ionosphere_20an_cn_5_2tst <- read.keel("files/keel/noisy/an/cn/cn20/ionosphere-20an-cn/ionosphere-20an-cn-5-2tst.dat")
ionosphere_20an_cn_5_3tra <- read.keel("files/keel/noisy/an/cn/cn20/ionosphere-20an-cn/ionosphere-20an-cn-5-3tra.dat")
ionosphere_20an_cn_5_3tst <- read.keel("files/keel/noisy/an/cn/cn20/ionosphere-20an-cn/ionosphere-20an-cn-5-3tst.dat")
ionosphere_20an_cn_5_4tra <- read.keel("files/keel/noisy/an/cn/cn20/ionosphere-20an-cn/ionosphere-20an-cn-5-4tra.dat")
ionosphere_20an_cn_5_4tst <- read.keel("files/keel/noisy/an/cn/cn20/ionosphere-20an-cn/ionosphere-20an-cn-5-4tst.dat")
ionosphere_20an_cn_5_5tra <- read.keel("files/keel/noisy/an/cn/cn20/ionosphere-20an-cn/ionosphere-20an-cn-5-5tra.dat")
ionosphere_20an_cn_5_5tst <- read.keel("files/keel/noisy/an/cn/cn20/ionosphere-20an-cn/ionosphere-20an-cn-5-5tst.dat")
head(ionosphere_20an_cn_5_1tra)
source('~/.active-rstudio-document', echo=TRUE)
head(ionosphere_20an_cn_5_5tst)
sapply(ionosphere_20an_cn_5_5tst, unique)
sonar_20an_cn_5_1tra <- read.keel("files/keel/noisy/an/cn/cn20/sonar-20an-cn/sonar-20an-cn-5-1tra.dat")
head(sonar_20an_cn_5_1tra)
source('~/.active-rstudio-document', echo=TRUE)
head(sonar_20an_cn_5_1tra)
sonar_20an_cn_5_1tra <- read.keel("files/keel/noisy/an/cn/cn20/sonar-20an-cn/sonar-20an-cn-5-1tra.dat")
head(sonar_20an_cn_5_1tra)
source('~/.active-rstudio-document', echo=TRUE)
head(sonar_20an_cn_5_3tra)
sapply(sonar_20an_cn_5_3tra, unique)
iris_20an_cn_5_1tra <- read.keel("files/keel/noisy/an/cn/cn20/iris-20an-cn/iris-20an-cn-5-1tra.dat")
head(iris_20an_cn_5_1tra)
source('~/.active-rstudio-document', echo=TRUE)
head(iris_20an_cn_5_5tra)
contraceptive_20an_cn_5_1tra <- read.keel("files/keel/noisy/an/cn/cn20/contraceptive-20an-cn/contraceptive-20an-cn-5-1tra.dat")
head(contraceptive_20an_cn_5_1tra)
source('~/.active-rstudio-document', echo=TRUE)
head(contraceptive_20an_cn_5_1tra)
sapply(contraceptive_20an_cn_5_1tra, unique)
wine_20an_cn_5_1tra <- read.keel("files/keel/noisy/an/cn/cn20/wine-20an-cn/wine-20an-cn-5-1tra.dat")
wine_20an_cn_5_1tra <- read.keel("files/keel/noisy/an/cn/cn20/wine-20an-cn/wine-20an-cn-5-1tra.dat")
wine_20an_cn_5_1tra <- read.keel("files/keel/noisy/an/cn/cn20/wine-20an-cn/wine-20an-cn-5-1tra.dat")
head(wine_20an_cn_5_1tra)
source('~/.active-rstudio-document', echo=TRUE)
head(wine_20an_cn_5_1tra)
sapply(wine_20an_cn_5_1tra, unique)
source('~/Desktop/Github/ndata/ndata/R/keel_an_cn_5.R', echo=TRUE)
source('~/Desktop/Github/ndata/ndata/R/keel_an_nc_20.R', echo=TRUE)
source('~/Desktop/Github/ndata/ndata/R/keel_an_nc_20.R', echo=TRUE)
source('~/Desktop/Github/ndata/ndata/R/keel_an_nc_20.R', echo=TRUE)
source('~/Desktop/Github/ndata/ndata/R/keel_an_cn_5.R', echo=TRUE)
head(ecoli_20an_cn_5_1tra)
head(ecoli_20an_cn_5_1tra$class)
head(ionosphere_20an_cn_5_1tra$class)
table(ionosphere_20an_cn_5_1tra$class)
source('~/Desktop/Github/ndata/ndata/R/keel_an_nc_20.R', echo=TRUE)
source('~/Desktop/Github/ndata/ndata/R/keel_an_nc_5.R', echo=TRUE)
expand.grid("_5_", 1:5, x("tra","test"))
expand.grid("_5_", 1:5, c("tra","test"))
apply(expand.grid("_5_", 1:5, c("tra","test")), 2, collapse)
apply(expand.grid("_5_", 1:5, c("tra","test")), 1, collapse)
apply(expand.grid("_5_", 1:5, c("tra","test")), 1, glue_collapse)
apply(expand.grid("_5_", 1:5, c("tra","tst")), 1, glue_collapse)
cv_sufixes <- apply(expand.grid("_5_", 1:5, c("tra","tst")), 1, glue_collapse)
an_cn5_sufixes <- paste0("5an_cn", cv_sufixes)
an_cn5_sufixes
names <- c("ecoli", "glass", "ionosphere", "sonar")
names
nammes_an_cn5 <- c(names, an_cn5_sufixes)
names_an_cn5 <- c(names, an_cn5_sufixes)
names_an_cn5
names_an_cn5 <- paste0(names, an_cn5_sufixes)
names_an_cn5
names_an_cn5 <- exaand.grid(names, an_cn5_sufixes)
names_an_cn5 <- apply(expand.grid(names, an_cn5_sufixes), 1, glue_collapse)
names_an_cn5
#names_an_cn5 <- apply(expand.grid(names, an_cn5_sufixes), 1, glue_collapse)
names_an_cn5 <- paste0(names[1], "_", an_cn5_sufixes)
names_an_cn5
ecoli_5an_cn
ecoli_5an_cn_5_1
ecoli_5an_cn_5_1 <- noelia_train(ecoli_5an_cn_5_1tra, ecoli_5an_cn_5_1tst, class_index)
ecoli_5an_cn_5_1tra
ecoli_5an_cn_5_1tst
ecoli_5an_cn_5_1 <- noelia_train(ecoli_5an_cn_5_1tra, ecoli_5an_cn_5_1tst, class_index)
save.image(file = "all.RData")
output_details <- function(datasets, latex = FALSE) {
info <- tribble(~name, ~instances, ~features, ~classes, ~proportion, ~imbalance_ratio)
for(dname in datasets) {
d <- get(dname)
info <- info %>% bind_rows(tibble(name = dname,
instances = nrow(d),
features = ncol(d) - 1,
classes = length(unique(d$class)),
class_names = length(unique(d$class)),
proportion =paste0("[",glue_collapse(names(table(d$class))), 2), sep = "/"), "]"), paste0("[",glue_collapse(round(as.numeric(prop.table(table(d$class))), 2), sep = "/"), "]"),
output_details <- function(datasets, latex = FALSE) {
info <- tribble(~name, ~instances, ~features, ~classes, ~proportion, ~imbalance_ratio)
for(dname in datasets) {
d <- get(dname)
info <- info %>% bind_rows(tibble(name = dname,
instances = nrow(d),
features = ncol(d) - 1,
classes = length(unique(d$class)),
class_names =paste0("[",glue_collapse(names(table(d$class)), sep = "/"), "]"),
proportion =paste0("[",glue_collapse(round(as.numeric(prop.table(table(d$class))), 2), sep = "/"), "]"), paste0("[",glue_collapse(round(as.numeric(prop.table(table(d$class))), 2), sep = "/"), "]"),
imbalance_ratio = ifelse(length(names(table(d$class) == 2)), max(((table(d$class)[1])/(table(d$class)[2])), ((table(d$class)[2])/(table(d$class)[1]))), "-" )))
}
if(latex) return(xtable(info))
return(info)
}
output_details <- function(datasets, latex = FALSE) {
info <- tribble(~name, ~instances, ~features, ~classes, ~class_names, ~proportion, ~imbalance_ratio)
for(dname in datasets) {
d <- get(dname)
info <- info %>% bind_rows(tibble(name = dname,
instances = nrow(d),
features = ncol(d) - 1,
classes = length(unique(d$class)),
class_names =paste0("[",glue_collapse(names(table(d$class)), sep = "/"), "]"),
proportion =paste0("[",glue_collapse(round(as.numeric(prop.table(table(d$class))), 2), sep = "/"), "]"), paste0("[",glue_collapse(round(as.numeric(prop.table(table(d$class))), 2), sep = "/"), "]"),
imbalance_ratio = ifelse(length(names(table(d$class) == 2)), max(((table(d$class)[1])/(table(d$class)[2])), ((table(d$class)[2])/(table(d$class)[1]))), "-" )))
}
if(latex) return(xtable(info))
return(info)
}
output_details(banknote)
output_details(imbalance1)
imbalance1
# Keel
imbalance1 <- c("ecoli_0_vs_1", "glass0", "glass1", "glass6", "haberman", "iris0", "wisconsin")
output_details(imbalance1)
output_details <- function(datasets, latex = FALSE) {
info <- tribble(~name, ~instances, ~features, ~classes, ~class_names, ~proportion, ~imbalance_ratio)
for(dname in datasets) {
d <- get(dname)
info <- info %>% bind_rows(tibble(name = dname,
instances = nrow(d),
features = ncol(d) - 1,
classes = length(unique(d$class)),
class_names = paste0("[",glue_collapse(names(table(d$class)), sep = "/"), "]"),
proportion = paste0("[",glue_collapse(round(as.numeric(prop.table(table(d$class))), 2), sep = "/"), "]"),
imbalance_ratio = ifelse(length(names(table(d$class) == 2)), max(((table(d$class)[1])/(table(d$class)[2])), ((table(d$class)[2])/(table(d$class)[1]))), "-" )))
}
if(latex) return(xtable(info))
return(info)
}
output_details(imbalance1)
data_numerical_binary_l10 <- c("banknote", "haberman", "skin", "vertebral_column2", "weight_height")
data_numerical_binary_m10 <- c("audit_risk", "ionosphere", "sonar")
data_numerical_multiclass_l10 <-c("filtered_ecoli", "glass", "life_expectancy", "seeds", "vertebral_column3", "wifi_localization", "mini_yeast") #"iris",
data_num_multiclass_m10 <- c("mini_waves")
output_details(data_numerical_binary_l10
)
banknote <- read_csv(file.path("files", "bank_note.csv"),
col_types = cols(class = col_factor(NULL)),
col_names = c("variance",
"skewness",
"curtosis",
"entropy",
"class"))
banknote <- banknote[, c("class", setdiff(colnames(banknote), "class"))]
banknote <- mutate(class = fct_relevel(class, "1", "0"))
banknote$class
banknote <- read_csv(file.path("files", "bank_note.csv"),
col_types = cols(class = col_factor(NULL)),
col_names = c("variance",
"skewness",
"curtosis",
"entropy",
"class"))
banknote <- banknote[, c("class", setdiff(colnames(banknote), "class"))]
banknote <- banknote %>% mutate(class = fct_relevel(class, "1", "0"))
head(banknote)
banknote$class
set.seed(123)
mini_banknote <- createDataPartition(banknote$class, p = 0.1, list = FALSE)
mini_banknote <- banknote[mini_banknote, ]
save(banknote, mini_banknote, file = "data/banknote.RData")
output_details(data_numerical_binary_l10)
haberman <- read_csv(file.path("files", "haberman.csv"),
col_types = cols(.default = col_double(),
class = col_factor()),
col_names = c("age", "year", "nodes", "class"))
haberman <- haberman[, c("class", setdiff(colnames(haberman), "class"))]
haberman <- haberman %>% mutate(class = fct_relevel(class, "2", "1"))
save(haberman, file = "data/haberman.RData")
vertebral_column2 <- read.arff(file.path("files", "vetebral_column_2.arff"))
vertebral_column2 <- as_tibble(vertebral_column2)
vertebral_column2 <- vertebral_column2[, c("class", setdiff(colnames(vertebral_column2), "class"))]
vertebral_column2 <- vertebral_column2 %>% mutate(class = fct_relevel(class, "Normal", "Abnormal"))
vertebral_column3 <- read.arff(file.path("files", "vertebral_column_3.arff"))
vertebral_column3 <- as_tibble(vertebral_column3)
vertebral_column3 <- vertebral_column3[, c("class", setdiff(colnames(vertebral_column3), "class"))]
save(vertebral_column2, vertebral_column3, file = "data/vertebral_column.RData")
data_numerical_binary_l10 <- c("banknote", "haberman", "skin", "vertebral_column2", "weight_height")
data_numerical_binary_m10 <- c("audit_risk", "ionosphere", "sonar")
data_numerical_multiclass_l10 <-c("filtered_ecoli", "glass", "life_expectancy", "seeds", "vertebral_column3", "wifi_localization", "mini_yeast") #"iris",
data_num_multiclass_m10 <- c("mini_waves")
output_details(data_numerical_binary_l10)
output_details(data_numerical_binary_m10)
audit_risk <- read.table(file.path("files", "audit_risk.csv"),
header = TRUE,
sep = ",")
audit_risk <- audit_risk %>% as_tibble(audit_risk) %>%
rename(class = Risk) %>%
mutate(LOCATION_ID = NULL,
Detection_Risk = NULL)
audit_risk <- audit_risk[, c("class", setdiff(colnames(audit_risk), "class"))]
audit_risk <- audit_risk %>% mutate(class = fct_relevel(class, "1", "0"))
audit_risk <- read.table(file.path("files", "audit_risk.csv"),
header = TRUE,
sep = ",")
audit_risk <- audit_risk %>% as_tibble(audit_risk) %>%
rename(class = Risk) %>%
mutate(LOCATION_ID = NULL,
Detection_Risk = NULL)
audit_risk <- audit_risk[, c("class", setdiff(colnames(audit_risk), "class"))]
head(audit_risk)
audit_risk$class
audit_risk <- audit_risk[, c("class", setdiff(colnames(audit_risk), "class"))]
audit_risk$class
audit_risk <- read.table(file.path("files", "audit_risk.csv"),
header = TRUE,
sep = ",")
audit_risk <- audit_risk %>% as_tibble(audit_risk) %>%
rename(class = Risk) %>%
mutate(LOCATION_ID = NULL,
Detection_Risk = NULL)
audit_risk <- audit_risk[, c("class", setdiff(colnames(audit_risk), "class"))]
audit_risk
audit_risk <- read.table(file.path("files", "audit_risk.csv"),
header = TRUE,
sep = ",")
audit_risk <- audit_risk %>% as_tibble(audit_risk) %>%
rename(class = Risk) %>%
mutate(LOCATION_ID = NULL,
Detection_Risk = NULL,
class = factor(class))
audit_risk <- audit_risk[, c("class", setdiff(colnames(audit_risk), "class"))]
audit_risk <- audit_risk %>% mutate(class = fct_relevel(class, "1", "0"))
sapply(audit_risk, class)
sapply(audit_risk, unique)
set.seed(123)
mini_audit_risk <- createDataPartition(audit_risk$class, p = 0.3, list = FALSE)
mini_audit_risk <- audit_risk[mini_audit_risk, ]
save(audit_risk, mini_audit_risk, file = "data/audit_risk.RData")
output_details(data_numerical_binary_m10)
sonar <- read.csv(file.path("files", "sonar.csv"), header = FALSE)
sonar <- as_tibble(sonar) %>% rename(class = V61) %>% mutate(class = factor(class))
sonar <- sonar[, c("class", setdiff(colnames(sonar), "class"))]
sonar <- sonar %>% mutate(class = fct_relevel(class, "R", "M"))
save(sonar, file = "data/sonar.RData")
output_details(data_numerical_binary_m10)
output_details(data_numerical_binary)
data_numerical_binary_l10 <- c("banknote", "haberman", "skin", "vertebral_column2", "weight_height")
data_numerical_binary_m10 <- c("audit_risk", "ionospheren", "sonar")
data_numerical_binary <- c(data_numerical_binary_l10, data_numerical_binary_m10)
output_details(data_numerical_binary)
data_numerical_multiclass_l10
output_details(data_numerical_multiclass_l10)
output_details(data_numerical_multiclass_m10)
data_numerical_multiclass_m10 <- c("mini_waves")
output_details(data_numerical_multiclass_m10)
waves <- read_csv("files/waves.csv", col_names = FALSE)
head(waves)
sapply(waves, unique)
waves$X22 <- as.factor(waves$X22)
waves <- waves %>% rename(class = X22)
waves
waves <- waves[, c("class", setdiff(colnames(waves), "class"))]
waves
table(waves$class)
nrow(waves)
waves <- read_csv("files/waves.csv", col_names = FALSE)
waves$X22 <- as.factor(waves$X22)
waves <- waves %>% rename(class = X22)
waves <- waves[, c("class", setdiff(colnames(waves), "class"))]
set.seed(123)
mini_waves <- createDataPartition(waves$class, p = 0.1, list = FALSE)
mini_waves <- waves[mini_waves,]
nrow(mini_waves)
set.seed(123)
mini_waves <- createDataPartition(waves$class, p = 0.08, list = FALSE)
mini_waves <- waves[mini_waves,]
nrow(mini_waves)
set.seed(123)
mini_waves <- createDataPartition(waves$class, p = 0.05, list = FALSE)
mini_waves <- waves[mini_waves,]
nrow(mini_waves)
save(waves, mini_waves, file = "data/waves.RData")
output_details(data_numerical_multiclass_m10)
output_details(imbalance1)
# Keel
imbalance1 <- c("ecoli_0_vs_1", "iris0", "glass0", "glass1", "glass6", "haberman", "iris0", "wisconsin")
output_details(imbalance1)
iris0 <- read.keel("files/keel/imbalance/ratio1/iris0.dat")
change <- colnames(iris0)[colnames(iris0) != "Class"]
iris0 <- iris0 %>% mutate_at(change, function(x) {as.numeric(as.character(x))}) %>%
rename(class = Class)
iris0 <- iris0[, c("class", setdiff(colnames(iris0), "class"))]
iris0 <- iris0 %>% mutate(class = fct_relevel("positive", "negative"))
iris0 <- read.keel("files/keel/imbalance/ratio1/iris0.dat")
change <- colnames(iris0)[colnames(iris0) != "Class"]
iris0 <- iris0 %>% mutate_at(change, function(x) {as.numeric(as.character(x))}) %>%
rename(class = Class)
iris0 <- iris0[, c("class", setdiff(colnames(iris0), "class"))]
iris0 <- iris0 %>% mutate(class = fct_relevel(class, "positive", "negative"))
save(iris0, file = "data/iris0.RData")
output_details(imbalance1)
glass0 <- read.keel("files/keel/imbalance/ratio1/glass0.dat")
change <- colnames(glass0)[colnames(glass0) != "Class"]
glass0 <- glass0 %>% mutate_at(change, function(x) {as.numeric(as.character(x))}) %>%
rename(class = Class)
glass0 <- glass0[, c("class", setdiff(colnames(glass0), "class"))]
glass0 <- glass0 %>% mutate(class = fct_relevel(class, "positive", "negative"))
save(glass0, file = "data/glass0.RData")
output_details(imbalance1)
View(glass0)
glass1 <- read.keel("files/keel/imbalance/ratio1/glass1.dat")
change <- colnames(glass1)[colnames(glass1) != "Class"]
glass1 <- glass1 %>% mutate_at(change, function(x) {as.numeric(as.character(x))}) %>%
rename(class = Class)
glass1 <- glass1[, c("class", setdiff(colnames(glass1), "class"))]
glass1 <- glass1 %>% mutate(class = fct_relevel(class, "positive", "negative"))
save(glass1, file = "data/glass1.RData")
output_details(imbalance1)
glass6 <- read.keel("files/keel/imbalance/ratio1/glass6.dat")
change <- colnames(glass6)[colnames(glass6) != "Class"]
glass6 <- glass6 %>% mutate_at(change, function(x) {as.numeric(as.character(x))}) %>%
rename(class = Class)
glass6 <- glass6[, c("class", setdiff(colnames(glass6), "class"))]
glass6 <- glass6 %>% mutate(class = fct_relevel(class, "positive", "negative"))
save(glass6, file = "data/glass6.RData")
output_details(imbalance1)
wisconsin <- read.keel("files/keel/imbalance/ratio1/wisconsin.dat")
change <- colnames(wisconsin)[colnames(wisconsin) != "Class"]
wisconsin <- wisconsin %>% mutate_at(change, as.numeric)%>%
rename(class = Class)
wisconsin <- wisconsin[, c("class", setdiff(colnames(wisconsin), "class"))]
wisconsin <- glass6 %>% wisconsin(class = fct_relevel(class, "positive", "negative"))
wisconsin <- read.keel("files/keel/imbalance/ratio1/wisconsin.dat")
change <- colnames(wisconsin)[colnames(wisconsin) != "Class"]
wisconsin <- wisconsin %>% mutate_at(change, as.numeric)%>%
rename(class = Class)
wisconsin <- wisconsin[, c("class", setdiff(colnames(wisconsin), "class"))]
head(wisconsin)
wisconsin <- wisconsin %>% wisconsin(class = fct_relevel(class, "positive", "negative"))
wisconsin <- read.keel("files/keel/imbalance/ratio1/wisconsin.dat")
change <- colnames(wisconsin)[colnames(wisconsin) != "Class"]
wisconsin <- wisconsin %>% mutate_at(change, as.numeric)%>%
rename(class = Class)
wisconsin <- wisconsin[, c("class", setdiff(colnames(wisconsin), "class"))]
wisconsin <- wisconsin %>% wisconsin(class = fct_relevel(class, "positive", "negative"))
wisconsin <- read.keel("files/keel/imbalance/ratio1/wisconsin.dat")
change <- colnames(wisconsin)[colnames(wisconsin) != "Class"]
wisconsin <- wisconsin %>% mutate_at(change, as.numeric)%>%
rename(class = Class)
wisconsin <- wisconsin[, c("class", setdiff(colnames(wisconsin), "class"))]
head(wisconsin)
wisconsin <- wisconsin %>% mutate(class = fct_relevel(class, "positive", "negative"))
save(wisconsin, file = "data/wisconsin.RData")
output_details(imbalance1)
output_details(imbalance2)
ecoli4 <- read.keel("files/keel/imbalance/ratio2/ecoli4.dat")
change <- colnames(ecoli4)[colnames(ecoli4) != "Class"]
ecoli4 <- ecoli4 %>% mutate_at(change, function(x) {as.numeric(as.character(x))}) %>%
rename(class = Class)
ecoli4 <- ecoli4[, c("class", setdiff(colnames(ecoli4), "class"))]
ecoli4 <- ecoli4 %>% mutate(class = fct_relevel(class, "positive", "negative"))
save(ecoli4, file = "data/ecoli4.RData")
ecoli_0_1_4_6_vs_5 <- read.keel("files/keel/imbalance/ratio2/ecoli-0-1-4-6_vs_5.dat")
change <- colnames(ecoli_0_1_4_6_vs_5)[colnames(ecoli_0_1_4_6_vs_5) != "class"]
ecoli_0_1_4_6_vs_5 <- ecoli_0_1_4_6_vs_5 %>% mutate_at(change, function(x) {as.numeric(as.character(x))})
ecoli_0_1_4_6_vs_5 <- ecoli_0_1_4_6_vs_5[, c("class", setdiff(colnames(ecoli_0_1_4_6_vs_5), "class"))]
ecoli_0_1_4_6_vs_5 <- ecoli_0_1_4_6_vs_5 %>% mutate(class = fct_relevel(class, "positive", "negative"))
save(ecoli_0_1_4_6_vs_5, file = "data/ecoli_0_1_4_6_vs_5.RData")
ecoli_0_1_4_7_vs_2_3_5_6<- read.keel("files/keel/imbalance/ratio2/ecoli-0-1-4-7_vs_2-3-5-6.dat")
change <- colnames(ecoli_0_1_4_7_vs_2_3_5_6)[colnames(ecoli_0_1_4_7_vs_2_3_5_6) != "class"]
ecoli_0_1_4_7_vs_2_3_5_6<- ecoli_0_1_4_7_vs_2_3_5_6 %>% mutate_at(change, function(x) {as.numeric(as.character(x))})
ecoli_0_1_4_7_vs_2_3_5_6 <- ecoli_0_1_4_7_vs_2_3_5_6[, c("class", setdiff(colnames(ecoli_0_1_4_7_vs_2_3_5_6), "class"))]
ecoli_0_1_4_7_vs_2_3_5_6 <- ecoli_0_1_4_7_vs_2_3_5_6 %>% mutate(class = fct_relevel(class, "positive", "negative"))
save(ecoli_0_1_4_7_vs_2_3_5_6, file = "data/ecoli_0_1_4_7_vs_2_3_5_6.RData")
ecoli_0_1_4_7_vs_5_6 <- read.keel("files/keel/imbalance/ratio2/ecoli-0-1-4-7_vs_5-6.dat")
change <- colnames(ecoli_0_1_4_7_vs_5_6)[colnames(ecoli_0_1_4_7_vs_5_6) != "class"]
ecoli_0_1_4_7_vs_5_6 <- ecoli_0_1_4_7_vs_5_6 %>% mutate_at(change, function(x) {as.numeric(as.character(x))})
ecoli_0_1_4_7_vs_5_6 <- ecoli_0_1_4_7_vs_5_6[, c("class", setdiff(colnames(ecoli_0_1_4_7_vs_5_6), "class"))]
ecoli_0_1_4_7_vs_5_6 <- ecoli_0_1_4_7_vs_5_6 %>% mutate(class = fct_relevel(class, "positive", "negative"))
save(ecoli_0_1_4_7_vs_5_6, file = "data/ecoli_0_1_4_7_vs_5_6.RData")
output_details(imbalance2)
imbalance2 <- c("ecoli4",
"ecoli_0_1_4_6_vs_5",
"ecoli_0_1_4_7_vs_2_3_5_6",
"ecoli_0_1_4_7_vs_5_6",
"ecoli_0_6_7_vs_5",
"glass2",
"glass4",
"glass5",
"yeast_0_3_5_9_vs_7_8") # "yeast6",
outç
output_details(imbalance2)
ecoli_0_6_7_vs_5 <- read.keel("files/keel/imbalance/ratio2/ecoli-0-6-7_vs_5.dat")
change <- colnames(ecoli_0_6_7_vs_5)[colnames(ecoli_0_6_7_vs_5) != "class"]
ecoli_0_6_7_vs_5 <- ecoli_0_6_7_vs_5 %>% mutate_at(change, function(x) {as.numeric(as.character(x))})
ecoli_0_6_7_vs_5 <- ecoli_0_6_7_vs_5[, c("class", setdiff(colnames(ecoli_0_6_7_vs_5), "class"))]
ecoli_0_6_7_vs_5 <- ecoli_0_6_7_vs_5 %>% mutate(class = fct_relevel(class, "positive", "negative"))
save(ecoli_0_6_7_vs_5, file = "data/ecoli_0_6_7_vs_5.RData")
glass2 <- read.keel("files/keel/imbalance/ratio2/glass2.dat")
change <- colnames(glass2)[colnames(glass2) != "Class"]
glass2 <- glass2 %>% mutate_at(change, function(x) {as.numeric(as.character(x))}) %>%
rename(class = Class)
glass2 <- glass2[, c("class", setdiff(colnames(glass2), "class"))]
glass2 <- glass2 %>% mutate(class = fct_relevel(class, "positive", "negative"))
save(glass2, file = "data/glass2.RData")
glass4 <- read.keel("files/keel/imbalance/ratio2/glass4.dat")
change <- colnames(glass4)[colnames(glass4) != "Class"]
glass4 <- glass4 %>% mutate_at(change, function(x) {as.numeric(as.character(x))}) %>%
rename(class = Class)
glass4 <- glass4[, c("class", setdiff(colnames(glass4), "class"))]
glass4 <- glass4 %>% mutate(class = fct_relevel(class, "positive", "negative"))
save(glass4, file = "data/glass4.RData")
glass5 <- read.keel("files/keel/imbalance/ratio2/glass5.dat")
change <- colnames(glass5)[colnames(glass5) != "Class"]
glass5 <- glass5 %>% mutate_at(change, function(x) {as.numeric(as.character(x))}) %>%
rename(class = Class)
glass5 <- glass5[, c("class", setdiff(colnames(glass5), "class"))]
glass5 <- glass5 %>% mutate(class = fct_relevel(class, "positive", "negative"))
save(glass5, file = "data/glass5.RData")
yeast6 <- read.keel("files/keel/imbalance/ratio2/yeast6.dat")
change <- colnames(yeast6)[colnames(yeast6) != "Class"]
yeast6 <- yeast6 %>% mutate_at(change, function(x) {as.numeric(as.character(x))}) %>%
rename(class = Class)
yeast6 <- yeast6[, c("class", setdiff(colnames(yeast6), "class"))]
yeast6 <- glass5[, c("class", setdiff(colnames(glass5), "class"))]
save(yeast6, file = "data/yeast6.RData")
yeast6 <- read.keel("files/keel/imbalance/ratio2/yeast6.dat")
change <- colnames(yeast6)[colnames(yeast6) != "Class"]
yeast6 <- read.keel("files/keel/imbalance/ratio2/yeast6.dat")
change <- colnames(yeast6)[colnames(yeast6) != "Class"]
yeast6 <- yeast6 %>% mutate_at(change, function(x) {as.numeric(as.character(x))}) %>%
rename(class = Class)
yeast6 <- yeast6[, c("class", setdiff(colnames(yeast6), "class"))]
yeast6 <- yeast6 %>% mutate(class = fct_relevel(class, "positive", "negative"))
save(yeast6, file = "data/yeast6.RData")
yeast_0_3_5_9_vs_7_8 <- read.keel("files/keel/imbalance/ratio2/yeast-0-3-5-9_vs_7-8.dat")
change <- colnames(yeast_0_3_5_9_vs_7_8)[colnames(yeast_0_3_5_9_vs_7_8) != "class"]
yeast_0_3_5_9_vs_7_8 <- yeast_0_3_5_9_vs_7_8 %>% mutate_at(change, function(x) {as.numeric(as.character(x))})
yeast_0_3_5_9_vs_7_8 <- yeast_0_3_5_9_vs_7_8[, c("class", setdiff(colnames(yeast_0_3_5_9_vs_7_8), "class"))]
yeast_0_3_5_9_vs_7_8 <- yeast_0_3_5_9_vs_7_8 %>% mutate(class = fct_relevel(class, "positive", "negative"))
save(yeast_0_3_5_9_vs_7_8, file = "data/yeast_0_3_5_9_vs_7_8.RData")
output_details(imbalance2)
save.image(file = "all.RData")
